name: Teste de Integração da API de inventario

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-integration:
    runs-on: windows-latest

    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4

      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Instalar dependencias
        run: pip install -r requirements.txt

      - name: Verificar qualidade do codigo com Flake8 (Linter)
        run: |
          pip install flake8
          # Foca em erros graves de sintaxe e imports
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

      - name: Rodar Teste de Integração (API + Coletor)
        shell: pwsh # Define explicitamente o shell como PowerShell Core
        run: |
          # 0. Diagnóstico: Lista a estrutura de arquivos para confirmar os caminhos
          echo "Verificando a estrutura de arquivos..."
          Get-ChildItem -Recurse
          echo "-------------------------------------"
          
          # 1. Inicia o servidor da API a partir da pasta 'server' em background
          echo "Iniciando o servidor da API..."
          $api_job = Start-Job -ScriptBlock { python api_receiver.py } -WorkingDirectory ./server
          
          # 2. Aguarda alguns segundos para garantir que o servidor subiu
          echo "Aguardando o servidor ficar online..."
          Start-Sleep -Seconds 5
          
          # 3. Executa o script coletor a partir da pasta 'agent'
          echo "Executando o coletor para enviar dados..."
          python ./agent/collector.py
          
          # 4. Para o servidor Flask de forma segura usando a referência do job
          echo "Desligando o servidor da API..."
          Stop-Job -Job $api_job
          Remove-Job -Job $api_job # Limpa o job da sessão
          
          # 5. Verifica se o banco de dados foi criado e populado
          echo "Verificando o banco de dados..."
          python ./db/verify_db.py
